# Visit https://github.com/lowlighter/metrics#-documentation for full reference
name: Metrics
on:
  # Schedule updates
  schedule:
    - cron: "0 0 * * 1"  # Monday 00:00
    - cron: "0 0 * * 4"  # Thursday 00:00
    - cron: "0 0 * * 6"  # Saturday 00:00
  # Lines below let you run workflow manually and on each commit
  workflow_dispatch:
  push: {branches: ["master", "main"]}
jobs:
  github-metrics:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      
      - name: Check if last commit is from GitHub Actions
        id: check_last_commit
        run: |
          LAST_COMMIT_AUTHOR=$(git log -1 --format='%an')
          echo "Last commit author: $LAST_COMMIT_AUTHOR"
          if [ "$LAST_COMMIT_AUTHOR" = "github-actions[bot]" ]; then
            echo "force_push=true" >> $GITHUB_OUTPUT
            echo "Last commit was from GitHub Actions, will force push"
          else
            echo "force_push=false" >> $GITHUB_OUTPUT
            echo "Last commit was not from GitHub Actions, will create new commit"
          fi
      
      - uses: lowlighter/metrics@latest
        with:
          token: ${{ secrets.METRICS_TOKEN }}
          
          # Disable automatic committing so we can handle it ourselves
          committer_token: ""
          
          # Options
          user: ha-ves
          template: classic
          base: header, activity, community, repositories, metadata
          config_display: large
          config_timezone: Asia/Tokyo
          plugin_discussions: yes
          plugin_discussions_categories: yes
          plugin_followup: yes
          plugin_followup_archived: yes
          plugin_followup_sections: repositories, user
          plugin_fortune: yes
          plugin_gists: yes
          plugin_isocalendar: yes
          plugin_isocalendar_duration: half-year
          plugin_languages: yes
          plugin_languages_analysis_timeout: 15
          plugin_languages_analysis_timeout_repositories: 7.5
          plugin_languages_categories: markup, programming
          plugin_languages_colors: github
          plugin_languages_details: percentage
          plugin_languages_limit: 8
          plugin_languages_other: yes
          plugin_languages_recent_categories: markup, programming
          plugin_languages_recent_days: 14
          plugin_languages_recent_load: 300
          plugin_languages_sections: most-used
          plugin_languages_threshold: 0%
          plugin_notable: yes
          plugin_notable_from: organization
          plugin_notable_repositories: yes
          plugin_notable_types: commit, pull_request
          plugin_people: yes
          plugin_people_limit: 24
          plugin_people_shuffle: yes
          plugin_people_size: 28
          plugin_people_types: followers
          plugin_reactions: yes
          plugin_reactions_display: relative
          plugin_reactions_limit: 200
          plugin_reactions_limit_discussions: 100
          plugin_reactions_limit_discussions_comments: 100
          plugin_reactions_limit_issues: 100
          plugin_topics: yes
          plugin_topics_limit: 8
          plugin_topics_mode: labels
          plugin_topics_sort: activity
          plugin_traffic: yes
      
      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "github-actions[bot]"
          
          # Check if there are changes to commit
          if git diff --quiet github-metrics.svg; then
            echo "No changes detected in github-metrics.svg, skipping commit"
          else
            git add github-metrics.svg
            
            if [ "${{ steps.check_last_commit.outputs.force_push }}" = "true" ]; then
              echo "Amending previous commit to avoid pileup..."
              git commit --amend -m "Update github-metrics.svg - [Skip GitHub Action]"
              git push --force-with-lease origin ${{ github.ref_name }}
              echo "Force pushed amended commit"
            else
              echo "Creating new commit..."
              git commit -m "Update github-metrics.svg - [Skip GitHub Action]"
              git push origin ${{ github.ref_name }}
              echo "Pushed new commit"
            fi
          fi
